#pragma once

#include "FingerBasic.h"
#include "MinuDesc.h"


class MinuDescMCC:
	public MinuDesc
{
public:
	MinuDescMCC(void);
	~MinuDescMCC(void);

	virtual double CompareDesc(MinuDesc* desc);
	virtual void ShowDesc();

	BYTE* pMask;
	BYTE* pMCC;
	BYTE valid;
};

class MinuDescsMCC:
	public MinuDescs
{
public:
	MinuDescsMCC() {};
	virtual ~MinuDescsMCC() {};
	virtual void CreateDesc(Minutiae& minus, BYTE* ROI, int nHeight, int nWidth);
	virtual void SaveDesc(FILE* file);
	virtual void SaveDesc(char* fname);
	virtual bool LoadDesc(FILE* file);
	virtual bool LoadDesc(char* fname);
	virtual MinuDesc* GetDesc(int i) {return ((MinuDescMCC*)pDescs)+i;};
};


//const int PARAM_MCC_NsL = 4;
//const int PARAM_MCC_NdL = 2;
const int PARAM_MCC_Ns = 16;
const int PARAM_MCC_Nd = 6;

//extern int PARAM_MCC_Ns;
//extern int PARAM_MCC_Nd;

const int PARAM_MCC_R = 70;
const double PARAM_MCC_sigma_s = 28/3;
const double PARAM_MCC_sigma_d = 2*M_PI/9;
const double PARAM_MCC_mu_psi = 0.01;
const int PARAM_MCC_tau_psi = 400;
const int PARAM_MCC_omega = 50;

const double PARAM_MCC_Min_VC = 0.5;//0.75
const int PARAM_MCC_Min_M = 2;
const double PARAM_MCC_Min_ME = 0.3;//0.6
const double PARAM_MCC_delta_theta = M_PI/2;

const int PARAM_MCC_Min_pair = 4;
const int PARAM_MCC_Max_pair = 12;
const int PARAM_MCC_mu_p = 20;
const double PARAM_MCC_tau_p = 2/5;

const double DIR_CONTRIBUTION_6[360] = {
0.000098,0.000108,0.000119,0.000131,0.000144,0.000159,0.000175,0.000192,0.000211,0.000232,0.000255,0.000280,
0.000307,0.000336,0.000369,0.000403,0.000441,0.000483,0.000527,0.000576,0.000629,0.000686,0.000748,0.000815,
0.000887,0.000965,0.001050,0.001142,0.001240,0.001347,0.001461,0.001585,0.001717,0.001860,0.002014,0.002179,
0.002356,0.002547,0.002751,0.002969,0.003203,0.003454,0.003722,0.004008,0.004314,0.004641,0.004989,0.005361,
0.005756,0.006178,0.006627,0.007104,0.007611,0.008149,0.008721,0.009328,0.009971,0.010652,0.011373,0.012136,
0.012943,0.013796,0.014696,0.015646,0.016649,0.017705,0.018818,0.019990,0.021222,0.022518,0.023879,0.025308,
0.026807,0.028380,0.030027,0.031753,0.033558,0.035447,0.037421,0.039482,0.041634,0.043878,0.046218,0.048655,
0.051192,0.053832,0.056576,0.059427,0.062386,0.065457,0.068641,0.071940,0.075356,0.078891,0.082546,0.086322,
0.090222,0.094245,0.098395,0.102670,0.107073,0.111603,0.116261,0.121047,0.125962,0.131005,0.136175,0.141473,
0.146897,0.152446,0.158118,0.163913,0.169829,0.175863,0.182012,0.188276,0.194650,0.201131,0.207717,0.214403,
0.221185,0.228060,0.235023,0.242069,0.249192,0.256389,0.263652,0.270977,0.278358,0.285787,0.293259,0.300767,
0.308304,0.315862,0.323434,0.331013,0.338590,0.346158,0.353709,0.361235,0.368726,0.376175,0.383573,0.390911,
0.398180,0.405373,0.412479,0.419490,0.426398,0.433193,0.439866,0.446410,0.452814,0.459071,0.465173,0.471110,
0.476875,0.482459,0.487856,0.493057,0.498054,0.502842,0.507412,0.511759,0.515875,0.519756,0.523394,0.526786,
0.529925,0.532807,0.535428,0.537784,0.539871,0.541687,0.543228,0.544491,0.545476,0.546181,0.546604,0.546745,
0.546604,0.546181,0.545476,0.544491,0.543228,0.541687,0.539871,0.537784,0.535428,0.532807,0.529925,0.526786,
0.523394,0.519756,0.515875,0.511759,0.507412,0.502842,0.498054,0.493057,0.487856,0.482459,0.476875,0.471110,
0.465173,0.459071,0.452814,0.446410,0.439866,0.433193,0.426398,0.419490,0.412479,0.405373,0.398180,0.390911,
0.383573,0.376175,0.368726,0.361235,0.353709,0.346158,0.338590,0.331013,0.323434,0.315862,0.308304,0.300767,
0.293259,0.285787,0.278358,0.270977,0.263652,0.256389,0.249192,0.242069,0.235023,0.228060,0.221185,0.214403,
0.207717,0.201131,0.194650,0.188276,0.182012,0.175863,0.169829,0.163913,0.158118,0.152446,0.146897,0.141473,
0.136175,0.131005,0.125962,0.121047,0.116261,0.111603,0.107073,0.102670,0.098395,0.094245,0.090222,0.086322,
0.082546,0.078891,0.075356,0.071940,0.068641,0.065457,0.062386,0.059427,0.056576,0.053832,0.051192,0.048655,
0.046218,0.043878,0.041634,0.039482,0.037421,0.035447,0.033558,0.031753,0.030027,0.028380,0.026807,0.025308,
0.023879,0.022518,0.021222,0.019990,0.018818,0.017705,0.016649,0.015646,0.014696,0.013796,0.012943,0.012136,
0.011373,0.010652,0.009971,0.009328,0.008721,0.008149,0.007611,0.007104,0.006627,0.006178,0.005756,0.005361,
0.004989,0.004641,0.004314,0.004008,0.003722,0.003454,0.003203,0.002969,0.002751,0.002547,0.002356,0.002179,
0.002014,0.001860,0.001717,0.001585,0.001461,0.001347,0.001240,0.001142,0.001050,0.000965,0.000887,0.000815,
0.000748,0.000686,0.000629,0.000576,0.000527,0.000483,0.000441,0.000403,0.000369,0.000336,0.000307,0.000280,
0.000255,0.000232,0.000211,0.000192,0.000175,0.000159,0.000144,0.000131,0.000119,0.000108,0.000098,0.000088
};

const double DIR_CONTRIBUTION_2[360] = {
0.013041,0.013903,0.014815,0.015778,0.016793,0.017864,0.018993,0.020182,0.021434,0.022750,0.024134,0.025588,
0.027115,0.028717,0.030396,0.032157,0.034001,0.035930,0.037949,0.040059,0.042264,0.044565,0.046967,0.049471,
0.052081,0.054799,0.057628,0.060571,0.063630,0.066807,0.070106,0.073529,0.077079,0.080757,0.084566,0.088508,
0.092586,0.096800,0.101155,0.105650,0.110288,0.115070,0.119997,0.125072,0.130295,0.135666,0.141187,0.146859,
0.152682,0.158655,0.164780,0.171056,0.177483,0.184060,0.190787,0.197662,0.204686,0.211855,0.219170,0.226627,
0.234226,0.241964,0.249838,0.257846,0.265985,0.274253,0.282645,0.291159,0.299791,0.308537,0.317393,0.326355,
0.335418,0.344578,0.353830,0.363169,0.372590,0.382088,0.391657,0.401293,0.410988,0.420739,0.430538,0.440381,
0.450260,0.460170,0.470105,0.480059,0.490024,0.499997,0.509969,0.519935,0.529888,0.539822,0.549732,0.559611,
0.569453,0.579251,0.589001,0.598696,0.608330,0.617898,0.627395,0.636814,0.646151,0.655401,0.664559,0.673619,
0.682578,0.691431,0.700173,0.708801,0.717311,0.725699,0.733961,0.742095,0.750097,0.757964,0.765694,0.773284,
0.780733,0.788037,0.795195,0.802206,0.809069,0.815781,0.822342,0.828751,0.835008,0.841112,0.847063,0.852861,
0.858505,0.863997,0.869336,0.874524,0.879561,0.884447,0.889184,0.893773,0.898216,0.902512,0.906665,0.910676,
0.914545,0.918276,0.921869,0.925327,0.928651,0.931843,0.934906,0.937840,0.940649,0.943335,0.945899,0.948343,
0.950669,0.952879,0.954976,0.956961,0.958836,0.960603,0.962263,0.963819,0.965271,0.966622,0.967873,0.969026,
0.970081,0.971040,0.971905,0.972675,0.973353,0.973938,0.974432,0.974836,0.975149,0.975372,0.975506,0.975551,
0.975506,0.975372,0.975149,0.974836,0.974432,0.973938,0.973353,0.972675,0.971905,0.971040,0.970081,0.969026,
0.967873,0.966622,0.965271,0.963819,0.962263,0.960603,0.958836,0.956961,0.954976,0.952879,0.950669,0.948343,
0.945899,0.943335,0.940649,0.937840,0.934906,0.931843,0.928651,0.925327,0.921869,0.918276,0.914545,0.910676,
0.906665,0.902512,0.898216,0.893773,0.889184,0.884447,0.879561,0.874524,0.869336,0.863997,0.858505,0.852861,
0.847063,0.841112,0.835008,0.828751,0.822342,0.815781,0.809069,0.802206,0.795195,0.788037,0.780733,0.773284,
0.765694,0.757964,0.750097,0.742095,0.733961,0.725699,0.717311,0.708801,0.700173,0.691431,0.682578,0.673619,
0.664559,0.655401,0.646151,0.636814,0.627395,0.617898,0.608330,0.598696,0.589001,0.579251,0.569453,0.559611,
0.549732,0.539822,0.529888,0.519935,0.509969,0.499997,0.490024,0.480059,0.470105,0.460170,0.450260,0.440381,
0.430538,0.420739,0.410988,0.401293,0.391657,0.382088,0.372590,0.363169,0.353830,0.344578,0.335418,0.326355,
0.317393,0.308537,0.299791,0.291159,0.282645,0.274253,0.265985,0.257846,0.249838,0.241964,0.234226,0.226627,
0.219170,0.211855,0.204686,0.197662,0.190787,0.184060,0.177483,0.171056,0.164780,0.158655,0.152682,0.146859,
0.141187,0.135666,0.130295,0.125072,0.119997,0.115070,0.110288,0.105650,0.101155,0.096800,0.092586,0.088508,
0.084566,0.080757,0.077079,0.073529,0.070106,0.066807,0.063630,0.060571,0.057628,0.054799,0.052081,0.049471,
0.046967,0.044565,0.042264,0.040059,0.037949,0.035930,0.034001,0.032157,0.030396,0.028717,0.027115,0.025588,
0.024134,0.022750,0.021434,0.020182,0.018993,0.017864,0.016793,0.015778,0.014815,0.013903,0.013041,0.012224
};
